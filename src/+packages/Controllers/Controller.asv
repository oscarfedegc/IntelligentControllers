% This abstract class represents the controller schemes and their
% components: the gains, the update rates, the control signals, and the
% tracking error memory for 
, the control signals, the tracking error memory and
% i
plant (or model to be controled) and its desired
% trajectories, the neural network topology, and the control schemes.
classdef Controller < handle
    properties (Access = protected)
        gains, signal, eTrackingMemory, updateRates {mustBeNumeric}
        performance {mustBeNumeric}
    end
    
    methods (Abstract)
        evaluate();
        autotune();
        updateMemory();
        charts();
    end
    
    methods (Access = public)
        function setGains(self, gains)
            self.gains = gains;
        end
        
        function gains = getGains(self)
            gains = self.gains;
        end
        
        function setUpdateRates(self, rates)
            self.updateRates = rates;
        end
        
        function signal = getSignal(self)
            signal = self.signal;
        end
        
        function initPerformance(self, samples)
            self.performance = zeros(samples, length(self.gains) + 1);
        end
        
        function setPerformance(self, iteration)
            self.performance(iteration,:) = [self.gains, self.signal];
        end
        
        function performance = getPerformance(self)
            performance = self.performance;
        end
    end
end